{"version":3,"sources":["components/Card.js","api/github.js","components/Header.js","App.js","components/Contributors.js","serviceWorker.js","index.js"],"names":["Card","items","className","map","item","key","id","alt","src","owner","avatar_url","full_name","language","description","open_issues","stargazers_count","to","state","url","contributors_url","href","html_url","github","axios","create","baseURL","headers","Accept","Header","App","useState","search","setSearch","setItems","submit","more","isLoading","setIsLoading","page","useRef","handleSubmit","e","a","preventDefault","get","params","q","per_page","current","response","setTimeout","data","document","getElementById","style","display","loadMore","window","scrollTo","body","scrollHeight","onSubmit","type","placeholder","onChange","target","value","Spinner","animation","marginLeft","marginRight","onClick","Contributors","useLocation","contributors","setContributors","quantity","setQuantity","useEffect","slice","login","contributions","Boolean","location","hostname","match","routing","path","element","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7336333.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Card = ( { items } ) => {\n    \n  return(\n    <div className=\"div_container\">\n      {\n        items.map(item =>(\n          <div key={item.id}>\n            <div className=\"div-card\">\n              <div className=\"div-img\">\n                <img \n                  className=\"vcs-img\" \n                  alt=\"No img\" \n                  src={item.owner.avatar_url}\n                />\n              </div>\n              <div>\n                <b>{item.full_name}</b>\n              </div>\n              <div>\n                <span className=\"vcs-language\">{item.language}</span>\n              </div>\n              <div className=\"vcs-description\">{item.description}</div>\n              <div>\n                <span className=\"vcs-issues\">Issues: {item.open_issues}</span>\n                <span className=\"vcs-stars\">Stars: {item.stargazers_count}</span>\n              </div>\n              <div className=\"vcs-repo\">\n                <Link \n                  to=\"/contributors\" \n                  state={{\n                    url: item.contributors_url\n                  }} \n                  className=\"vcs-contributor\"\n                >\n                  Top Contributors\n                </Link>\n                <a href={item.html_url} className=\"vcs-a\">Go to repository</a>\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Card;\n","import axios from \"axios\";\n\nexport const github = axios.create({\n  baseURL: 'https://api.github.com',\n  headers: {\n    Accept: 'application/vnd.github.v3+json',\n  },\n})","import React from 'react';\n\nexport const Header = () => {\n  return (\n    <div>\n      <div className=\"header\">\n        <img \n          id=\"react_icon\" \n          src=\"logo192.png\" \n          alt=\"React?\" \n        /> \n        <h1>Github Repo Searcher</h1>\n        <span>Search any repository from github here</span>\n      </div>\n    </div>\n  )\n}\n","import React, { useRef, useState } from 'react';\nimport Card from './components/Card';\nimport { Spinner } from 'react-bootstrap';\nimport { github } from './api/github';\nimport { Header } from './components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/App.css';\n\nconst App = () => {\n  const [search, setSearch] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState({\n    submit: false, \n    more: false\n  });\n  const page = useRef(6);\n  \n  const handleChange = (e) => setSearch(e.target.value);\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading({...isLoading, submit: true});\n    const response = await github.get('/search/repositories', {\n      params: {\n        q: search,\n        per_page: page.current,\n      }\n    });\n    if (page.current > 6) page.current = 6;\n    setTimeout(() => {\n      setIsLoading({...isLoading, submit: false});\n      setItems(response.data.items);\n      document.getElementById(\"load\").style.display = \"block\";\n    }, 1500);\n  }\n\n  const loadMore = async (e) => {\n    e.preventDefault();\n    setIsLoading({...isLoading, more: true});\n    page.current = page.current + 6;\n    if (page.current >= 60) {\n      page.current = 60;\n      document.getElementById(\"load\").style.display = \"none\";\n    }\n    const response = await github.get('/search/repositories', {\n      params: {\n        q: search,\n        per_page: page.current,\n      }\n    });\n    setTimeout(() => {\n      setIsLoading({...isLoading, more: false});\n      setItems(response.data.items);\n      window.scrollTo(0, document.body.scrollHeight);\n    }, 1500);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          placeholder=\"Search Repository\" \n          onChange={handleChange}\n        />\n        <button \n          style={search ? {} : {display:'none'}} \n          className=\"vcs-btn\"\n        >\n          Search\n        </button>\n        <br />\n        \n        {/* Form loading Spinner Effect */}\n        { (isLoading.submit) && <Spinner animation=\"border\" /> }\n      </form>\n      { (items) && <Card items={items} /> }\n      \n      {/* Load more Spinner Effect */}\n      { (isLoading.more) && <Spinner animation=\"border\" /> }\n      <button \n        className=\"vcs-btn\" \n        id=\"load\" \n        type=\"submit\"\n        style={{marginLeft: 'auto', marginRight: 'auto'}}\n        onClick={loadMore}\n      >\n        Load More...\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Header } from './Header';\n\nconst Contributors = () => {\n  // This component is getting props from useLocation Hook\n  const { state } = useLocation();\n  const [contributors, setContributors] = useState([]);\n  const [quantity, setQuantity] = useState(10);\n\n  const loadMore = () => {\n    setQuantity(quantity + 5);\n    if (quantity >= 25) \n      document.getElementById(\"contributor_load\").style.display = \"none\";\n  }\n\n  useEffect(() => {\n    (async () => {\n      const response = await axios.get(`${state.url}`);\n      setContributors(response.data);\n    })();\n  }, [state.url])\n\n  return (\n    <>\n      <Header />\n      <div>\n      {\n        contributors.slice(0, quantity).map((item) => (\n          <div key={item.id} className=\"vcs-contributor-div\">\n            <div>\n              <img className=\"vcs-con-img\" src={item.avatar_url} alt=\"not found!!\" />\n            </div>\n            <div className=\"vcs-con-name\">\n              <a href={item.html_url}>{item.login}</a>\n            </div>\n            <div className=\"vcs-con-name\">({item.contributions} Contributions)</div>\n          </div>\n        ))\n      }\n      </div>\n      <button \n        id=\"contributor_load\" \n        className=\"vcs-btn\" \n        style={{\n          marginLeft: 'auto', \n          marginRight: 'auto',\n        }}\n        onClick={loadMore}\n      >\n        Load more\n      </button>\n    </>\n  );\n}\nexport default Contributors;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Routes, Link, BrowserRouter } from 'react-router-dom';\nimport './css/index.css';\nimport App from './App';\nimport Contributors from './components/Contributors';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n  <BrowserRouter>\n    <div>\n      <ul className=\"App-routing\">\n        <span>\n          <Link className=\"vcs-route\" to=\"/\">Home</Link>\n        </span>\n      </ul>\n      <Routes>\n        <Route path=\"//*\" element={<App />} />\n        <Route path=\"/contributors\" element={<Contributors />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}